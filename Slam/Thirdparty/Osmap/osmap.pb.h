// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmap.proto

#ifndef PROTOBUF_INCLUDED_osmap_2eproto
#define PROTOBUF_INCLUDED_osmap_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto 

namespace protobuf_osmap_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[19];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_osmap_2eproto
class SerializedBBox2;
class SerializedBBox2DefaultTypeInternal;
extern SerializedBBox2DefaultTypeInternal _SerializedBBox2_default_instance_;
class SerializedDescriptor;
class SerializedDescriptorDefaultTypeInternal;
extern SerializedDescriptorDefaultTypeInternal _SerializedDescriptor_default_instance_;
class SerializedEllipsoid;
class SerializedEllipsoidDefaultTypeInternal;
extern SerializedEllipsoidDefaultTypeInternal _SerializedEllipsoid_default_instance_;
class SerializedFeature;
class SerializedFeatureDefaultTypeInternal;
extern SerializedFeatureDefaultTypeInternal _SerializedFeature_default_instance_;
class SerializedK;
class SerializedKDefaultTypeInternal;
extern SerializedKDefaultTypeInternal _SerializedK_default_instance_;
class SerializedKArray;
class SerializedKArrayDefaultTypeInternal;
extern SerializedKArrayDefaultTypeInternal _SerializedKArray_default_instance_;
class SerializedKeyframe;
class SerializedKeyframeDefaultTypeInternal;
extern SerializedKeyframeDefaultTypeInternal _SerializedKeyframe_default_instance_;
class SerializedKeyframeArray;
class SerializedKeyframeArrayDefaultTypeInternal;
extern SerializedKeyframeArrayDefaultTypeInternal _SerializedKeyframeArray_default_instance_;
class SerializedKeyframeFeatures;
class SerializedKeyframeFeaturesDefaultTypeInternal;
extern SerializedKeyframeFeaturesDefaultTypeInternal _SerializedKeyframeFeatures_default_instance_;
class SerializedKeyframeFeaturesArray;
class SerializedKeyframeFeaturesArrayDefaultTypeInternal;
extern SerializedKeyframeFeaturesArrayDefaultTypeInternal _SerializedKeyframeFeaturesArray_default_instance_;
class SerializedKeypoint;
class SerializedKeypointDefaultTypeInternal;
extern SerializedKeypointDefaultTypeInternal _SerializedKeypoint_default_instance_;
class SerializedMapobject;
class SerializedMapobjectDefaultTypeInternal;
extern SerializedMapobjectDefaultTypeInternal _SerializedMapobject_default_instance_;
class SerializedMapobjectArray;
class SerializedMapobjectArrayDefaultTypeInternal;
extern SerializedMapobjectArrayDefaultTypeInternal _SerializedMapobjectArray_default_instance_;
class SerializedMappoint;
class SerializedMappointDefaultTypeInternal;
extern SerializedMappointDefaultTypeInternal _SerializedMappoint_default_instance_;
class SerializedMappointArray;
class SerializedMappointArrayDefaultTypeInternal;
extern SerializedMappointArrayDefaultTypeInternal _SerializedMappointArray_default_instance_;
class SerializedObjectTrack;
class SerializedObjectTrackDefaultTypeInternal;
extern SerializedObjectTrackDefaultTypeInternal _SerializedObjectTrack_default_instance_;
class SerializedObjectTrackArray;
class SerializedObjectTrackArrayDefaultTypeInternal;
extern SerializedObjectTrackArrayDefaultTypeInternal _SerializedObjectTrackArray_default_instance_;
class SerializedPose;
class SerializedPoseDefaultTypeInternal;
extern SerializedPoseDefaultTypeInternal _SerializedPose_default_instance_;
class SerializedPosition;
class SerializedPositionDefaultTypeInternal;
extern SerializedPositionDefaultTypeInternal _SerializedPosition_default_instance_;
namespace google {
namespace protobuf {
template<> ::SerializedBBox2* Arena::CreateMaybeMessage<::SerializedBBox2>(Arena*);
template<> ::SerializedDescriptor* Arena::CreateMaybeMessage<::SerializedDescriptor>(Arena*);
template<> ::SerializedEllipsoid* Arena::CreateMaybeMessage<::SerializedEllipsoid>(Arena*);
template<> ::SerializedFeature* Arena::CreateMaybeMessage<::SerializedFeature>(Arena*);
template<> ::SerializedK* Arena::CreateMaybeMessage<::SerializedK>(Arena*);
template<> ::SerializedKArray* Arena::CreateMaybeMessage<::SerializedKArray>(Arena*);
template<> ::SerializedKeyframe* Arena::CreateMaybeMessage<::SerializedKeyframe>(Arena*);
template<> ::SerializedKeyframeArray* Arena::CreateMaybeMessage<::SerializedKeyframeArray>(Arena*);
template<> ::SerializedKeyframeFeatures* Arena::CreateMaybeMessage<::SerializedKeyframeFeatures>(Arena*);
template<> ::SerializedKeyframeFeaturesArray* Arena::CreateMaybeMessage<::SerializedKeyframeFeaturesArray>(Arena*);
template<> ::SerializedKeypoint* Arena::CreateMaybeMessage<::SerializedKeypoint>(Arena*);
template<> ::SerializedMapobject* Arena::CreateMaybeMessage<::SerializedMapobject>(Arena*);
template<> ::SerializedMapobjectArray* Arena::CreateMaybeMessage<::SerializedMapobjectArray>(Arena*);
template<> ::SerializedMappoint* Arena::CreateMaybeMessage<::SerializedMappoint>(Arena*);
template<> ::SerializedMappointArray* Arena::CreateMaybeMessage<::SerializedMappointArray>(Arena*);
template<> ::SerializedObjectTrack* Arena::CreateMaybeMessage<::SerializedObjectTrack>(Arena*);
template<> ::SerializedObjectTrackArray* Arena::CreateMaybeMessage<::SerializedObjectTrackArray>(Arena*);
template<> ::SerializedPose* Arena::CreateMaybeMessage<::SerializedPose>(Arena*);
template<> ::SerializedPosition* Arena::CreateMaybeMessage<::SerializedPosition>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class SerializedDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedDescriptor) */ {
 public:
  SerializedDescriptor();
  virtual ~SerializedDescriptor();

  SerializedDescriptor(const SerializedDescriptor& from);

  inline SerializedDescriptor& operator=(const SerializedDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedDescriptor(SerializedDescriptor&& from) noexcept
    : SerializedDescriptor() {
    *this = ::std::move(from);
  }

  inline SerializedDescriptor& operator=(SerializedDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedDescriptor* internal_default_instance() {
    return reinterpret_cast<const SerializedDescriptor*>(
               &_SerializedDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SerializedDescriptor* other);
  friend void swap(SerializedDescriptor& a, SerializedDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedDescriptor* New() const final {
    return CreateMaybeMessage<SerializedDescriptor>(NULL);
  }

  SerializedDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedDescriptor& from);
  void MergeFrom(const SerializedDescriptor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 block = 1;
  int block_size() const;
  void clear_block();
  static const int kBlockFieldNumber = 1;
  ::google::protobuf::uint32 block(int index) const;
  void set_block(int index, ::google::protobuf::uint32 value);
  void add_block(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      block() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_block();

  // @@protoc_insertion_point(class_scope:SerializedDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > block_;
  mutable int _block_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedPose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedPose) */ {
 public:
  SerializedPose();
  virtual ~SerializedPose();

  SerializedPose(const SerializedPose& from);

  inline SerializedPose& operator=(const SerializedPose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedPose(SerializedPose&& from) noexcept
    : SerializedPose() {
    *this = ::std::move(from);
  }

  inline SerializedPose& operator=(SerializedPose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedPose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedPose* internal_default_instance() {
    return reinterpret_cast<const SerializedPose*>(
               &_SerializedPose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SerializedPose* other);
  friend void swap(SerializedPose& a, SerializedPose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedPose* New() const final {
    return CreateMaybeMessage<SerializedPose>(NULL);
  }

  SerializedPose* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedPose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedPose& from);
  void MergeFrom(const SerializedPose& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedPose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  float element(int index) const;
  void set_element(int index, float value);
  void add_element(float value);
  const ::google::protobuf::RepeatedField< float >&
      element() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_element();

  // @@protoc_insertion_point(class_scope:SerializedPose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > element_;
  mutable int _element_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedPosition) */ {
 public:
  SerializedPosition();
  virtual ~SerializedPosition();

  SerializedPosition(const SerializedPosition& from);

  inline SerializedPosition& operator=(const SerializedPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedPosition(SerializedPosition&& from) noexcept
    : SerializedPosition() {
    *this = ::std::move(from);
  }

  inline SerializedPosition& operator=(SerializedPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedPosition* internal_default_instance() {
    return reinterpret_cast<const SerializedPosition*>(
               &_SerializedPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SerializedPosition* other);
  friend void swap(SerializedPosition& a, SerializedPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedPosition* New() const final {
    return CreateMaybeMessage<SerializedPosition>(NULL);
  }

  SerializedPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedPosition& from);
  void MergeFrom(const SerializedPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:SerializedPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKeypoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeypoint) */ {
 public:
  SerializedKeypoint();
  virtual ~SerializedKeypoint();

  SerializedKeypoint(const SerializedKeypoint& from);

  inline SerializedKeypoint& operator=(const SerializedKeypoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKeypoint(SerializedKeypoint&& from) noexcept
    : SerializedKeypoint() {
    *this = ::std::move(from);
  }

  inline SerializedKeypoint& operator=(SerializedKeypoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeypoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKeypoint* internal_default_instance() {
    return reinterpret_cast<const SerializedKeypoint*>(
               &_SerializedKeypoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SerializedKeypoint* other);
  friend void swap(SerializedKeypoint& a, SerializedKeypoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKeypoint* New() const final {
    return CreateMaybeMessage<SerializedKeypoint>(NULL);
  }

  SerializedKeypoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKeypoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKeypoint& from);
  void MergeFrom(const SerializedKeypoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKeypoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float ptx = 1;
  void clear_ptx();
  static const int kPtxFieldNumber = 1;
  float ptx() const;
  void set_ptx(float value);

  // float pty = 2;
  void clear_pty();
  static const int kPtyFieldNumber = 2;
  float pty() const;
  void set_pty(float value);

  // float angle = 3;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  float angle() const;
  void set_angle(float value);

  // float octave = 4;
  void clear_octave();
  static const int kOctaveFieldNumber = 4;
  float octave() const;
  void set_octave(float value);

  // @@protoc_insertion_point(class_scope:SerializedKeypoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float ptx_;
  float pty_;
  float angle_;
  float octave_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedK : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedK) */ {
 public:
  SerializedK();
  virtual ~SerializedK();

  SerializedK(const SerializedK& from);

  inline SerializedK& operator=(const SerializedK& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedK(SerializedK&& from) noexcept
    : SerializedK() {
    *this = ::std::move(from);
  }

  inline SerializedK& operator=(SerializedK&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedK& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedK* internal_default_instance() {
    return reinterpret_cast<const SerializedK*>(
               &_SerializedK_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SerializedK* other);
  friend void swap(SerializedK& a, SerializedK& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedK* New() const final {
    return CreateMaybeMessage<SerializedK>(NULL);
  }

  SerializedK* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedK>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedK& from);
  void MergeFrom(const SerializedK& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fx = 1;
  void clear_fx();
  static const int kFxFieldNumber = 1;
  float fx() const;
  void set_fx(float value);

  // float fy = 2;
  void clear_fy();
  static const int kFyFieldNumber = 2;
  float fy() const;
  void set_fy(float value);

  // float cx = 3;
  void clear_cx();
  static const int kCxFieldNumber = 3;
  float cx() const;
  void set_cx(float value);

  // float cy = 4;
  void clear_cy();
  static const int kCyFieldNumber = 4;
  float cy() const;
  void set_cy(float value);

  // @@protoc_insertion_point(class_scope:SerializedK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fx_;
  float fy_;
  float cx_;
  float cy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKArray) */ {
 public:
  SerializedKArray();
  virtual ~SerializedKArray();

  SerializedKArray(const SerializedKArray& from);

  inline SerializedKArray& operator=(const SerializedKArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKArray(SerializedKArray&& from) noexcept
    : SerializedKArray() {
    *this = ::std::move(from);
  }

  inline SerializedKArray& operator=(SerializedKArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKArray* internal_default_instance() {
    return reinterpret_cast<const SerializedKArray*>(
               &_SerializedKArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SerializedKArray* other);
  friend void swap(SerializedKArray& a, SerializedKArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKArray* New() const final {
    return CreateMaybeMessage<SerializedKArray>(NULL);
  }

  SerializedKArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKArray& from);
  void MergeFrom(const SerializedKArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedK k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::SerializedK* mutable_k(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedK >*
      mutable_k();
  const ::SerializedK& k(int index) const;
  ::SerializedK* add_k();
  const ::google::protobuf::RepeatedPtrField< ::SerializedK >&
      k() const;

  // @@protoc_insertion_point(class_scope:SerializedKArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedK > k_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedEllipsoid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedEllipsoid) */ {
 public:
  SerializedEllipsoid();
  virtual ~SerializedEllipsoid();

  SerializedEllipsoid(const SerializedEllipsoid& from);

  inline SerializedEllipsoid& operator=(const SerializedEllipsoid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedEllipsoid(SerializedEllipsoid&& from) noexcept
    : SerializedEllipsoid() {
    *this = ::std::move(from);
  }

  inline SerializedEllipsoid& operator=(SerializedEllipsoid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedEllipsoid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedEllipsoid* internal_default_instance() {
    return reinterpret_cast<const SerializedEllipsoid*>(
               &_SerializedEllipsoid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SerializedEllipsoid* other);
  friend void swap(SerializedEllipsoid& a, SerializedEllipsoid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedEllipsoid* New() const final {
    return CreateMaybeMessage<SerializedEllipsoid>(NULL);
  }

  SerializedEllipsoid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedEllipsoid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedEllipsoid& from);
  void MergeFrom(const SerializedEllipsoid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedEllipsoid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  float element(int index) const;
  void set_element(int index, float value);
  void add_element(float value);
  const ::google::protobuf::RepeatedField< float >&
      element() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_element();

  // @@protoc_insertion_point(class_scope:SerializedEllipsoid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > element_;
  mutable int _element_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedMappoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMappoint) */ {
 public:
  SerializedMappoint();
  virtual ~SerializedMappoint();

  SerializedMappoint(const SerializedMappoint& from);

  inline SerializedMappoint& operator=(const SerializedMappoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedMappoint(SerializedMappoint&& from) noexcept
    : SerializedMappoint() {
    *this = ::std::move(from);
  }

  inline SerializedMappoint& operator=(SerializedMappoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMappoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedMappoint* internal_default_instance() {
    return reinterpret_cast<const SerializedMappoint*>(
               &_SerializedMappoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SerializedMappoint* other);
  friend void swap(SerializedMappoint& a, SerializedMappoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedMappoint* New() const final {
    return CreateMaybeMessage<SerializedMappoint>(NULL);
  }

  SerializedMappoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedMappoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedMappoint& from);
  void MergeFrom(const SerializedMappoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedMappoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SerializedPosition position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::SerializedPosition& _internal_position() const;
  public:
  const ::SerializedPosition& position() const;
  ::SerializedPosition* release_position();
  ::SerializedPosition* mutable_position();
  void set_allocated_position(::SerializedPosition* position);

  // .SerializedDescriptor briefdescriptor = 5;
  bool has_briefdescriptor() const;
  void clear_briefdescriptor();
  static const int kBriefdescriptorFieldNumber = 5;
  private:
  const ::SerializedDescriptor& _internal_briefdescriptor() const;
  public:
  const ::SerializedDescriptor& briefdescriptor() const;
  ::SerializedDescriptor* release_briefdescriptor();
  ::SerializedDescriptor* mutable_briefdescriptor();
  void set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float visible = 3;
  void clear_visible();
  static const int kVisibleFieldNumber = 3;
  float visible() const;
  void set_visible(float value);

  // float found = 4;
  void clear_found();
  static const int kFoundFieldNumber = 4;
  float found() const;
  void set_found(float value);

  // @@protoc_insertion_point(class_scope:SerializedMappoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SerializedPosition* position_;
  ::SerializedDescriptor* briefdescriptor_;
  ::google::protobuf::uint32 id_;
  float visible_;
  float found_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedMappointArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMappointArray) */ {
 public:
  SerializedMappointArray();
  virtual ~SerializedMappointArray();

  SerializedMappointArray(const SerializedMappointArray& from);

  inline SerializedMappointArray& operator=(const SerializedMappointArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedMappointArray(SerializedMappointArray&& from) noexcept
    : SerializedMappointArray() {
    *this = ::std::move(from);
  }

  inline SerializedMappointArray& operator=(SerializedMappointArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMappointArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedMappointArray* internal_default_instance() {
    return reinterpret_cast<const SerializedMappointArray*>(
               &_SerializedMappointArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(SerializedMappointArray* other);
  friend void swap(SerializedMappointArray& a, SerializedMappointArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedMappointArray* New() const final {
    return CreateMaybeMessage<SerializedMappointArray>(NULL);
  }

  SerializedMappointArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedMappointArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedMappointArray& from);
  void MergeFrom(const SerializedMappointArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedMappointArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedMappoint mappoint = 1;
  int mappoint_size() const;
  void clear_mappoint();
  static const int kMappointFieldNumber = 1;
  ::SerializedMappoint* mutable_mappoint(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >*
      mutable_mappoint();
  const ::SerializedMappoint& mappoint(int index) const;
  ::SerializedMappoint* add_mappoint();
  const ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >&
      mappoint() const;

  // @@protoc_insertion_point(class_scope:SerializedMappointArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedMappoint > mappoint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedMapobject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMapobject) */ {
 public:
  SerializedMapobject();
  virtual ~SerializedMapobject();

  SerializedMapobject(const SerializedMapobject& from);

  inline SerializedMapobject& operator=(const SerializedMapobject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedMapobject(SerializedMapobject&& from) noexcept
    : SerializedMapobject() {
    *this = ::std::move(from);
  }

  inline SerializedMapobject& operator=(SerializedMapobject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMapobject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedMapobject* internal_default_instance() {
    return reinterpret_cast<const SerializedMapobject*>(
               &_SerializedMapobject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SerializedMapobject* other);
  friend void swap(SerializedMapobject& a, SerializedMapobject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedMapobject* New() const final {
    return CreateMaybeMessage<SerializedMapobject>(NULL);
  }

  SerializedMapobject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedMapobject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedMapobject& from);
  void MergeFrom(const SerializedMapobject& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedMapobject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SerializedEllipsoid ellipsoid = 1;
  bool has_ellipsoid() const;
  void clear_ellipsoid();
  static const int kEllipsoidFieldNumber = 1;
  private:
  const ::SerializedEllipsoid& _internal_ellipsoid() const;
  public:
  const ::SerializedEllipsoid& ellipsoid() const;
  ::SerializedEllipsoid* release_ellipsoid();
  ::SerializedEllipsoid* mutable_ellipsoid();
  void set_allocated_ellipsoid(::SerializedEllipsoid* ellipsoid);

  // uint32 object_track_id = 2;
  void clear_object_track_id();
  static const int kObjectTrackIdFieldNumber = 2;
  ::google::protobuf::uint32 object_track_id() const;
  void set_object_track_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SerializedMapobject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SerializedEllipsoid* ellipsoid_;
  ::google::protobuf::uint32 object_track_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedMapobjectArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMapobjectArray) */ {
 public:
  SerializedMapobjectArray();
  virtual ~SerializedMapobjectArray();

  SerializedMapobjectArray(const SerializedMapobjectArray& from);

  inline SerializedMapobjectArray& operator=(const SerializedMapobjectArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedMapobjectArray(SerializedMapobjectArray&& from) noexcept
    : SerializedMapobjectArray() {
    *this = ::std::move(from);
  }

  inline SerializedMapobjectArray& operator=(SerializedMapobjectArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMapobjectArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedMapobjectArray* internal_default_instance() {
    return reinterpret_cast<const SerializedMapobjectArray*>(
               &_SerializedMapobjectArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SerializedMapobjectArray* other);
  friend void swap(SerializedMapobjectArray& a, SerializedMapobjectArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedMapobjectArray* New() const final {
    return CreateMaybeMessage<SerializedMapobjectArray>(NULL);
  }

  SerializedMapobjectArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedMapobjectArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedMapobjectArray& from);
  void MergeFrom(const SerializedMapobjectArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedMapobjectArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedMapobject mapobject = 1;
  int mapobject_size() const;
  void clear_mapobject();
  static const int kMapobjectFieldNumber = 1;
  ::SerializedMapobject* mutable_mapobject(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedMapobject >*
      mutable_mapobject();
  const ::SerializedMapobject& mapobject(int index) const;
  ::SerializedMapobject* add_mapobject();
  const ::google::protobuf::RepeatedPtrField< ::SerializedMapobject >&
      mapobject() const;

  // @@protoc_insertion_point(class_scope:SerializedMapobjectArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedMapobject > mapobject_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedBBox2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedBBox2) */ {
 public:
  SerializedBBox2();
  virtual ~SerializedBBox2();

  SerializedBBox2(const SerializedBBox2& from);

  inline SerializedBBox2& operator=(const SerializedBBox2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedBBox2(SerializedBBox2&& from) noexcept
    : SerializedBBox2() {
    *this = ::std::move(from);
  }

  inline SerializedBBox2& operator=(SerializedBBox2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedBBox2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedBBox2* internal_default_instance() {
    return reinterpret_cast<const SerializedBBox2*>(
               &_SerializedBBox2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SerializedBBox2* other);
  friend void swap(SerializedBBox2& a, SerializedBBox2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedBBox2* New() const final {
    return CreateMaybeMessage<SerializedBBox2>(NULL);
  }

  SerializedBBox2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedBBox2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedBBox2& from);
  void MergeFrom(const SerializedBBox2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedBBox2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float xmin = 1;
  void clear_xmin();
  static const int kXminFieldNumber = 1;
  float xmin() const;
  void set_xmin(float value);

  // float ymin = 2;
  void clear_ymin();
  static const int kYminFieldNumber = 2;
  float ymin() const;
  void set_ymin(float value);

  // float xmax = 3;
  void clear_xmax();
  static const int kXmaxFieldNumber = 3;
  float xmax() const;
  void set_xmax(float value);

  // float ymax = 4;
  void clear_ymax();
  static const int kYmaxFieldNumber = 4;
  float ymax() const;
  void set_ymax(float value);

  // @@protoc_insertion_point(class_scope:SerializedBBox2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float xmin_;
  float ymin_;
  float xmax_;
  float ymax_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedObjectTrack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedObjectTrack) */ {
 public:
  SerializedObjectTrack();
  virtual ~SerializedObjectTrack();

  SerializedObjectTrack(const SerializedObjectTrack& from);

  inline SerializedObjectTrack& operator=(const SerializedObjectTrack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedObjectTrack(SerializedObjectTrack&& from) noexcept
    : SerializedObjectTrack() {
    *this = ::std::move(from);
  }

  inline SerializedObjectTrack& operator=(SerializedObjectTrack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedObjectTrack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedObjectTrack* internal_default_instance() {
    return reinterpret_cast<const SerializedObjectTrack*>(
               &_SerializedObjectTrack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SerializedObjectTrack* other);
  friend void swap(SerializedObjectTrack& a, SerializedObjectTrack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedObjectTrack* New() const final {
    return CreateMaybeMessage<SerializedObjectTrack>(NULL);
  }

  SerializedObjectTrack* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedObjectTrack>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedObjectTrack& from);
  void MergeFrom(const SerializedObjectTrack& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedObjectTrack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedBBox2 kf_bboxes = 8;
  int kf_bboxes_size() const;
  void clear_kf_bboxes();
  static const int kKfBboxesFieldNumber = 8;
  ::SerializedBBox2* mutable_kf_bboxes(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedBBox2 >*
      mutable_kf_bboxes();
  const ::SerializedBBox2& kf_bboxes(int index) const;
  ::SerializedBBox2* add_kf_bboxes();
  const ::google::protobuf::RepeatedPtrField< ::SerializedBBox2 >&
      kf_bboxes() const;

  // repeated uint32 kf_indices = 9;
  int kf_indices_size() const;
  void clear_kf_indices();
  static const int kKfIndicesFieldNumber = 9;
  ::google::protobuf::uint32 kf_indices(int index) const;
  void set_kf_indices(int index, ::google::protobuf::uint32 value);
  void add_kf_indices(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      kf_indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_kf_indices();

  // repeated double kf_scores = 10;
  int kf_scores_size() const;
  void clear_kf_scores();
  static const int kKfScoresFieldNumber = 10;
  double kf_scores(int index) const;
  void set_kf_scores(int index, double value);
  void add_kf_scores(double value);
  const ::google::protobuf::RepeatedField< double >&
      kf_scores() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_kf_scores();

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 cat = 2;
  void clear_cat();
  static const int kCatFieldNumber = 2;
  ::google::protobuf::uint32 cat() const;
  void set_cat(::google::protobuf::uint32 value);

  // uint32 last_frame_id = 3;
  void clear_last_frame_id();
  static const int kLastFrameIdFieldNumber = 3;
  ::google::protobuf::uint32 last_frame_id() const;
  void set_last_frame_id(::google::protobuf::uint32 value);

  // uint32 color_r = 4;
  void clear_color_r();
  static const int kColorRFieldNumber = 4;
  ::google::protobuf::uint32 color_r() const;
  void set_color_r(::google::protobuf::uint32 value);

  // uint32 color_g = 5;
  void clear_color_g();
  static const int kColorGFieldNumber = 5;
  ::google::protobuf::uint32 color_g() const;
  void set_color_g(::google::protobuf::uint32 value);

  // uint32 color_b = 6;
  void clear_color_b();
  static const int kColorBFieldNumber = 6;
  ::google::protobuf::uint32 color_b() const;
  void set_color_b(::google::protobuf::uint32 value);

  // uint32 status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SerializedObjectTrack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedBBox2 > kf_bboxes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kf_indices_;
  mutable int _kf_indices_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > kf_scores_;
  mutable int _kf_scores_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cat_;
  ::google::protobuf::uint32 last_frame_id_;
  ::google::protobuf::uint32 color_r_;
  ::google::protobuf::uint32 color_g_;
  ::google::protobuf::uint32 color_b_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedObjectTrackArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedObjectTrackArray) */ {
 public:
  SerializedObjectTrackArray();
  virtual ~SerializedObjectTrackArray();

  SerializedObjectTrackArray(const SerializedObjectTrackArray& from);

  inline SerializedObjectTrackArray& operator=(const SerializedObjectTrackArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedObjectTrackArray(SerializedObjectTrackArray&& from) noexcept
    : SerializedObjectTrackArray() {
    *this = ::std::move(from);
  }

  inline SerializedObjectTrackArray& operator=(SerializedObjectTrackArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedObjectTrackArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedObjectTrackArray* internal_default_instance() {
    return reinterpret_cast<const SerializedObjectTrackArray*>(
               &_SerializedObjectTrackArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SerializedObjectTrackArray* other);
  friend void swap(SerializedObjectTrackArray& a, SerializedObjectTrackArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedObjectTrackArray* New() const final {
    return CreateMaybeMessage<SerializedObjectTrackArray>(NULL);
  }

  SerializedObjectTrackArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedObjectTrackArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedObjectTrackArray& from);
  void MergeFrom(const SerializedObjectTrackArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedObjectTrackArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedObjectTrack objecttrack = 1;
  int objecttrack_size() const;
  void clear_objecttrack();
  static const int kObjecttrackFieldNumber = 1;
  ::SerializedObjectTrack* mutable_objecttrack(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedObjectTrack >*
      mutable_objecttrack();
  const ::SerializedObjectTrack& objecttrack(int index) const;
  ::SerializedObjectTrack* add_objecttrack();
  const ::google::protobuf::RepeatedPtrField< ::SerializedObjectTrack >&
      objecttrack() const;

  // @@protoc_insertion_point(class_scope:SerializedObjectTrackArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedObjectTrack > objecttrack_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKeyframe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframe) */ {
 public:
  SerializedKeyframe();
  virtual ~SerializedKeyframe();

  SerializedKeyframe(const SerializedKeyframe& from);

  inline SerializedKeyframe& operator=(const SerializedKeyframe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKeyframe(SerializedKeyframe&& from) noexcept
    : SerializedKeyframe() {
    *this = ::std::move(from);
  }

  inline SerializedKeyframe& operator=(SerializedKeyframe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKeyframe* internal_default_instance() {
    return reinterpret_cast<const SerializedKeyframe*>(
               &_SerializedKeyframe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SerializedKeyframe* other);
  friend void swap(SerializedKeyframe& a, SerializedKeyframe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKeyframe* New() const final {
    return CreateMaybeMessage<SerializedKeyframe>(NULL);
  }

  SerializedKeyframe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKeyframe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKeyframe& from);
  void MergeFrom(const SerializedKeyframe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKeyframe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 loopedgesids = 5;
  int loopedgesids_size() const;
  void clear_loopedgesids();
  static const int kLoopedgesidsFieldNumber = 5;
  ::google::protobuf::uint32 loopedgesids(int index) const;
  void set_loopedgesids(int index, ::google::protobuf::uint32 value);
  void add_loopedgesids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      loopedgesids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_loopedgesids();

  // .SerializedPose pose = 2;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 2;
  private:
  const ::SerializedPose& _internal_pose() const;
  public:
  const ::SerializedPose& pose() const;
  ::SerializedPose* release_pose();
  ::SerializedPose* mutable_pose();
  void set_allocated_pose(::SerializedPose* pose);

  // .SerializedK kmatrix = 3;
  bool has_kmatrix() const;
  void clear_kmatrix();
  static const int kKmatrixFieldNumber = 3;
  private:
  const ::SerializedK& _internal_kmatrix() const;
  public:
  const ::SerializedK& kmatrix() const;
  ::SerializedK* release_kmatrix();
  ::SerializedK* mutable_kmatrix();
  void set_allocated_kmatrix(::SerializedK* kmatrix);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 kindex = 4;
  void clear_kindex();
  static const int kKindexFieldNumber = 4;
  ::google::protobuf::uint32 kindex() const;
  void set_kindex(::google::protobuf::uint32 value);

  // double timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:SerializedKeyframe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > loopedgesids_;
  mutable int _loopedgesids_cached_byte_size_;
  ::SerializedPose* pose_;
  ::SerializedK* kmatrix_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 kindex_;
  double timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKeyframeArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeArray) */ {
 public:
  SerializedKeyframeArray();
  virtual ~SerializedKeyframeArray();

  SerializedKeyframeArray(const SerializedKeyframeArray& from);

  inline SerializedKeyframeArray& operator=(const SerializedKeyframeArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKeyframeArray(SerializedKeyframeArray&& from) noexcept
    : SerializedKeyframeArray() {
    *this = ::std::move(from);
  }

  inline SerializedKeyframeArray& operator=(SerializedKeyframeArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKeyframeArray* internal_default_instance() {
    return reinterpret_cast<const SerializedKeyframeArray*>(
               &_SerializedKeyframeArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SerializedKeyframeArray* other);
  friend void swap(SerializedKeyframeArray& a, SerializedKeyframeArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKeyframeArray* New() const final {
    return CreateMaybeMessage<SerializedKeyframeArray>(NULL);
  }

  SerializedKeyframeArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKeyframeArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKeyframeArray& from);
  void MergeFrom(const SerializedKeyframeArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKeyframeArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedKeyframe keyframe = 1;
  int keyframe_size() const;
  void clear_keyframe();
  static const int kKeyframeFieldNumber = 1;
  ::SerializedKeyframe* mutable_keyframe(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >*
      mutable_keyframe();
  const ::SerializedKeyframe& keyframe(int index) const;
  ::SerializedKeyframe* add_keyframe();
  const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >&
      keyframe() const;

  // @@protoc_insertion_point(class_scope:SerializedKeyframeArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe > keyframe_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedFeature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedFeature) */ {
 public:
  SerializedFeature();
  virtual ~SerializedFeature();

  SerializedFeature(const SerializedFeature& from);

  inline SerializedFeature& operator=(const SerializedFeature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedFeature(SerializedFeature&& from) noexcept
    : SerializedFeature() {
    *this = ::std::move(from);
  }

  inline SerializedFeature& operator=(SerializedFeature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedFeature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedFeature* internal_default_instance() {
    return reinterpret_cast<const SerializedFeature*>(
               &_SerializedFeature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SerializedFeature* other);
  friend void swap(SerializedFeature& a, SerializedFeature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedFeature* New() const final {
    return CreateMaybeMessage<SerializedFeature>(NULL);
  }

  SerializedFeature* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedFeature>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedFeature& from);
  void MergeFrom(const SerializedFeature& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SerializedKeypoint keypoint = 3;
  bool has_keypoint() const;
  void clear_keypoint();
  static const int kKeypointFieldNumber = 3;
  private:
  const ::SerializedKeypoint& _internal_keypoint() const;
  public:
  const ::SerializedKeypoint& keypoint() const;
  ::SerializedKeypoint* release_keypoint();
  ::SerializedKeypoint* mutable_keypoint();
  void set_allocated_keypoint(::SerializedKeypoint* keypoint);

  // .SerializedDescriptor briefdescriptor = 4;
  bool has_briefdescriptor() const;
  void clear_briefdescriptor();
  static const int kBriefdescriptorFieldNumber = 4;
  private:
  const ::SerializedDescriptor& _internal_briefdescriptor() const;
  public:
  const ::SerializedDescriptor& briefdescriptor() const;
  ::SerializedDescriptor* release_briefdescriptor();
  ::SerializedDescriptor* mutable_briefdescriptor();
  void set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor);

  // uint32 mappoint_id = 2;
  void clear_mappoint_id();
  static const int kMappointIdFieldNumber = 2;
  ::google::protobuf::uint32 mappoint_id() const;
  void set_mappoint_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SerializedFeature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SerializedKeypoint* keypoint_;
  ::SerializedDescriptor* briefdescriptor_;
  ::google::protobuf::uint32 mappoint_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKeyframeFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeFeatures) */ {
 public:
  SerializedKeyframeFeatures();
  virtual ~SerializedKeyframeFeatures();

  SerializedKeyframeFeatures(const SerializedKeyframeFeatures& from);

  inline SerializedKeyframeFeatures& operator=(const SerializedKeyframeFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKeyframeFeatures(SerializedKeyframeFeatures&& from) noexcept
    : SerializedKeyframeFeatures() {
    *this = ::std::move(from);
  }

  inline SerializedKeyframeFeatures& operator=(SerializedKeyframeFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeFeatures& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKeyframeFeatures* internal_default_instance() {
    return reinterpret_cast<const SerializedKeyframeFeatures*>(
               &_SerializedKeyframeFeatures_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SerializedKeyframeFeatures* other);
  friend void swap(SerializedKeyframeFeatures& a, SerializedKeyframeFeatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKeyframeFeatures* New() const final {
    return CreateMaybeMessage<SerializedKeyframeFeatures>(NULL);
  }

  SerializedKeyframeFeatures* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKeyframeFeatures>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKeyframeFeatures& from);
  void MergeFrom(const SerializedKeyframeFeatures& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKeyframeFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedFeature feature = 2;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 2;
  ::SerializedFeature* mutable_feature(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedFeature >*
      mutable_feature();
  const ::SerializedFeature& feature(int index) const;
  ::SerializedFeature* add_feature();
  const ::google::protobuf::RepeatedPtrField< ::SerializedFeature >&
      feature() const;

  // uint32 keyframe_id = 1;
  void clear_keyframe_id();
  static const int kKeyframeIdFieldNumber = 1;
  ::google::protobuf::uint32 keyframe_id() const;
  void set_keyframe_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SerializedKeyframeFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedFeature > feature_;
  ::google::protobuf::uint32 keyframe_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedKeyframeFeaturesArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeFeaturesArray) */ {
 public:
  SerializedKeyframeFeaturesArray();
  virtual ~SerializedKeyframeFeaturesArray();

  SerializedKeyframeFeaturesArray(const SerializedKeyframeFeaturesArray& from);

  inline SerializedKeyframeFeaturesArray& operator=(const SerializedKeyframeFeaturesArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedKeyframeFeaturesArray(SerializedKeyframeFeaturesArray&& from) noexcept
    : SerializedKeyframeFeaturesArray() {
    *this = ::std::move(from);
  }

  inline SerializedKeyframeFeaturesArray& operator=(SerializedKeyframeFeaturesArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeFeaturesArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedKeyframeFeaturesArray* internal_default_instance() {
    return reinterpret_cast<const SerializedKeyframeFeaturesArray*>(
               &_SerializedKeyframeFeaturesArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(SerializedKeyframeFeaturesArray* other);
  friend void swap(SerializedKeyframeFeaturesArray& a, SerializedKeyframeFeaturesArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedKeyframeFeaturesArray* New() const final {
    return CreateMaybeMessage<SerializedKeyframeFeaturesArray>(NULL);
  }

  SerializedKeyframeFeaturesArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedKeyframeFeaturesArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedKeyframeFeaturesArray& from);
  void MergeFrom(const SerializedKeyframeFeaturesArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedKeyframeFeaturesArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedKeyframeFeatures feature = 1;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  ::SerializedKeyframeFeatures* mutable_feature(int index);
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >*
      mutable_feature();
  const ::SerializedKeyframeFeatures& feature(int index) const;
  ::SerializedKeyframeFeatures* add_feature();
  const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >&
      feature() const;

  // @@protoc_insertion_point(class_scope:SerializedKeyframeFeaturesArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures > feature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_osmap_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SerializedDescriptor

// repeated fixed32 block = 1;
inline int SerializedDescriptor::block_size() const {
  return block_.size();
}
inline void SerializedDescriptor::clear_block() {
  block_.Clear();
}
inline ::google::protobuf::uint32 SerializedDescriptor::block(int index) const {
  // @@protoc_insertion_point(field_get:SerializedDescriptor.block)
  return block_.Get(index);
}
inline void SerializedDescriptor::set_block(int index, ::google::protobuf::uint32 value) {
  block_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedDescriptor.block)
}
inline void SerializedDescriptor::add_block(::google::protobuf::uint32 value) {
  block_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedDescriptor.block)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SerializedDescriptor::block() const {
  // @@protoc_insertion_point(field_list:SerializedDescriptor.block)
  return block_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SerializedDescriptor::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:SerializedDescriptor.block)
  return &block_;
}

// -------------------------------------------------------------------

// SerializedPose

// repeated float element = 1;
inline int SerializedPose::element_size() const {
  return element_.size();
}
inline void SerializedPose::clear_element() {
  element_.Clear();
}
inline float SerializedPose::element(int index) const {
  // @@protoc_insertion_point(field_get:SerializedPose.element)
  return element_.Get(index);
}
inline void SerializedPose::set_element(int index, float value) {
  element_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedPose.element)
}
inline void SerializedPose::add_element(float value) {
  element_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedPose.element)
}
inline const ::google::protobuf::RepeatedField< float >&
SerializedPose::element() const {
  // @@protoc_insertion_point(field_list:SerializedPose.element)
  return element_;
}
inline ::google::protobuf::RepeatedField< float >*
SerializedPose::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:SerializedPose.element)
  return &element_;
}

// -------------------------------------------------------------------

// SerializedPosition

// float x = 1;
inline void SerializedPosition::clear_x() {
  x_ = 0;
}
inline float SerializedPosition::x() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.x)
  return x_;
}
inline void SerializedPosition::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.x)
}

// float y = 2;
inline void SerializedPosition::clear_y() {
  y_ = 0;
}
inline float SerializedPosition::y() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.y)
  return y_;
}
inline void SerializedPosition::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.y)
}

// float z = 3;
inline void SerializedPosition::clear_z() {
  z_ = 0;
}
inline float SerializedPosition::z() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.z)
  return z_;
}
inline void SerializedPosition::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.z)
}

// -------------------------------------------------------------------

// SerializedKeypoint

// float ptx = 1;
inline void SerializedKeypoint::clear_ptx() {
  ptx_ = 0;
}
inline float SerializedKeypoint::ptx() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.ptx)
  return ptx_;
}
inline void SerializedKeypoint::set_ptx(float value) {
  
  ptx_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.ptx)
}

// float pty = 2;
inline void SerializedKeypoint::clear_pty() {
  pty_ = 0;
}
inline float SerializedKeypoint::pty() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.pty)
  return pty_;
}
inline void SerializedKeypoint::set_pty(float value) {
  
  pty_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.pty)
}

// float angle = 3;
inline void SerializedKeypoint::clear_angle() {
  angle_ = 0;
}
inline float SerializedKeypoint::angle() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.angle)
  return angle_;
}
inline void SerializedKeypoint::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.angle)
}

// float octave = 4;
inline void SerializedKeypoint::clear_octave() {
  octave_ = 0;
}
inline float SerializedKeypoint::octave() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.octave)
  return octave_;
}
inline void SerializedKeypoint::set_octave(float value) {
  
  octave_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.octave)
}

// -------------------------------------------------------------------

// SerializedK

// float fx = 1;
inline void SerializedK::clear_fx() {
  fx_ = 0;
}
inline float SerializedK::fx() const {
  // @@protoc_insertion_point(field_get:SerializedK.fx)
  return fx_;
}
inline void SerializedK::set_fx(float value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.fx)
}

// float fy = 2;
inline void SerializedK::clear_fy() {
  fy_ = 0;
}
inline float SerializedK::fy() const {
  // @@protoc_insertion_point(field_get:SerializedK.fy)
  return fy_;
}
inline void SerializedK::set_fy(float value) {
  
  fy_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.fy)
}

// float cx = 3;
inline void SerializedK::clear_cx() {
  cx_ = 0;
}
inline float SerializedK::cx() const {
  // @@protoc_insertion_point(field_get:SerializedK.cx)
  return cx_;
}
inline void SerializedK::set_cx(float value) {
  
  cx_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.cx)
}

// float cy = 4;
inline void SerializedK::clear_cy() {
  cy_ = 0;
}
inline float SerializedK::cy() const {
  // @@protoc_insertion_point(field_get:SerializedK.cy)
  return cy_;
}
inline void SerializedK::set_cy(float value) {
  
  cy_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.cy)
}

// -------------------------------------------------------------------

// SerializedKArray

// repeated .SerializedK k = 1;
inline int SerializedKArray::k_size() const {
  return k_.size();
}
inline void SerializedKArray::clear_k() {
  k_.Clear();
}
inline ::SerializedK* SerializedKArray::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKArray.k)
  return k_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedK >*
SerializedKArray::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKArray.k)
  return &k_;
}
inline const ::SerializedK& SerializedKArray::k(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKArray.k)
  return k_.Get(index);
}
inline ::SerializedK* SerializedKArray::add_k() {
  // @@protoc_insertion_point(field_add:SerializedKArray.k)
  return k_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedK >&
SerializedKArray::k() const {
  // @@protoc_insertion_point(field_list:SerializedKArray.k)
  return k_;
}

// -------------------------------------------------------------------

// SerializedEllipsoid

// repeated float element = 1;
inline int SerializedEllipsoid::element_size() const {
  return element_.size();
}
inline void SerializedEllipsoid::clear_element() {
  element_.Clear();
}
inline float SerializedEllipsoid::element(int index) const {
  // @@protoc_insertion_point(field_get:SerializedEllipsoid.element)
  return element_.Get(index);
}
inline void SerializedEllipsoid::set_element(int index, float value) {
  element_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedEllipsoid.element)
}
inline void SerializedEllipsoid::add_element(float value) {
  element_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedEllipsoid.element)
}
inline const ::google::protobuf::RepeatedField< float >&
SerializedEllipsoid::element() const {
  // @@protoc_insertion_point(field_list:SerializedEllipsoid.element)
  return element_;
}
inline ::google::protobuf::RepeatedField< float >*
SerializedEllipsoid::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:SerializedEllipsoid.element)
  return &element_;
}

// -------------------------------------------------------------------

// SerializedMappoint

// uint32 id = 1;
inline void SerializedMappoint::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedMappoint::id() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.id)
  return id_;
}
inline void SerializedMappoint::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.id)
}

// .SerializedPosition position = 2;
inline bool SerializedMappoint::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void SerializedMappoint::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::SerializedPosition& SerializedMappoint::_internal_position() const {
  return *position_;
}
inline const ::SerializedPosition& SerializedMappoint::position() const {
  const ::SerializedPosition* p = position_;
  // @@protoc_insertion_point(field_get:SerializedMappoint.position)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedPosition*>(
      &::_SerializedPosition_default_instance_);
}
inline ::SerializedPosition* SerializedMappoint::release_position() {
  // @@protoc_insertion_point(field_release:SerializedMappoint.position)
  
  ::SerializedPosition* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::SerializedPosition* SerializedMappoint::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedPosition>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedMappoint.position)
  return position_;
}
inline void SerializedMappoint::set_allocated_position(::SerializedPosition* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:SerializedMappoint.position)
}

// float visible = 3;
inline void SerializedMappoint::clear_visible() {
  visible_ = 0;
}
inline float SerializedMappoint::visible() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.visible)
  return visible_;
}
inline void SerializedMappoint::set_visible(float value) {
  
  visible_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.visible)
}

// float found = 4;
inline void SerializedMappoint::clear_found() {
  found_ = 0;
}
inline float SerializedMappoint::found() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.found)
  return found_;
}
inline void SerializedMappoint::set_found(float value) {
  
  found_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.found)
}

// .SerializedDescriptor briefdescriptor = 5;
inline bool SerializedMappoint::has_briefdescriptor() const {
  return this != internal_default_instance() && briefdescriptor_ != NULL;
}
inline void SerializedMappoint::clear_briefdescriptor() {
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) {
    delete briefdescriptor_;
  }
  briefdescriptor_ = NULL;
}
inline const ::SerializedDescriptor& SerializedMappoint::_internal_briefdescriptor() const {
  return *briefdescriptor_;
}
inline const ::SerializedDescriptor& SerializedMappoint::briefdescriptor() const {
  const ::SerializedDescriptor* p = briefdescriptor_;
  // @@protoc_insertion_point(field_get:SerializedMappoint.briefdescriptor)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedDescriptor*>(
      &::_SerializedDescriptor_default_instance_);
}
inline ::SerializedDescriptor* SerializedMappoint::release_briefdescriptor() {
  // @@protoc_insertion_point(field_release:SerializedMappoint.briefdescriptor)
  
  ::SerializedDescriptor* temp = briefdescriptor_;
  briefdescriptor_ = NULL;
  return temp;
}
inline ::SerializedDescriptor* SerializedMappoint::mutable_briefdescriptor() {
  
  if (briefdescriptor_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedDescriptor>(GetArenaNoVirtual());
    briefdescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedMappoint.briefdescriptor)
  return briefdescriptor_;
}
inline void SerializedMappoint::set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete briefdescriptor_;
  }
  if (briefdescriptor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      briefdescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, briefdescriptor, submessage_arena);
    }
    
  } else {
    
  }
  briefdescriptor_ = briefdescriptor;
  // @@protoc_insertion_point(field_set_allocated:SerializedMappoint.briefdescriptor)
}

// -------------------------------------------------------------------

// SerializedMappointArray

// repeated .SerializedMappoint mappoint = 1;
inline int SerializedMappointArray::mappoint_size() const {
  return mappoint_.size();
}
inline void SerializedMappointArray::clear_mappoint() {
  mappoint_.Clear();
}
inline ::SerializedMappoint* SerializedMappointArray::mutable_mappoint(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedMappointArray.mappoint)
  return mappoint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >*
SerializedMappointArray::mutable_mappoint() {
  // @@protoc_insertion_point(field_mutable_list:SerializedMappointArray.mappoint)
  return &mappoint_;
}
inline const ::SerializedMappoint& SerializedMappointArray::mappoint(int index) const {
  // @@protoc_insertion_point(field_get:SerializedMappointArray.mappoint)
  return mappoint_.Get(index);
}
inline ::SerializedMappoint* SerializedMappointArray::add_mappoint() {
  // @@protoc_insertion_point(field_add:SerializedMappointArray.mappoint)
  return mappoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >&
SerializedMappointArray::mappoint() const {
  // @@protoc_insertion_point(field_list:SerializedMappointArray.mappoint)
  return mappoint_;
}

// -------------------------------------------------------------------

// SerializedMapobject

// .SerializedEllipsoid ellipsoid = 1;
inline bool SerializedMapobject::has_ellipsoid() const {
  return this != internal_default_instance() && ellipsoid_ != NULL;
}
inline void SerializedMapobject::clear_ellipsoid() {
  if (GetArenaNoVirtual() == NULL && ellipsoid_ != NULL) {
    delete ellipsoid_;
  }
  ellipsoid_ = NULL;
}
inline const ::SerializedEllipsoid& SerializedMapobject::_internal_ellipsoid() const {
  return *ellipsoid_;
}
inline const ::SerializedEllipsoid& SerializedMapobject::ellipsoid() const {
  const ::SerializedEllipsoid* p = ellipsoid_;
  // @@protoc_insertion_point(field_get:SerializedMapobject.ellipsoid)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedEllipsoid*>(
      &::_SerializedEllipsoid_default_instance_);
}
inline ::SerializedEllipsoid* SerializedMapobject::release_ellipsoid() {
  // @@protoc_insertion_point(field_release:SerializedMapobject.ellipsoid)
  
  ::SerializedEllipsoid* temp = ellipsoid_;
  ellipsoid_ = NULL;
  return temp;
}
inline ::SerializedEllipsoid* SerializedMapobject::mutable_ellipsoid() {
  
  if (ellipsoid_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedEllipsoid>(GetArenaNoVirtual());
    ellipsoid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedMapobject.ellipsoid)
  return ellipsoid_;
}
inline void SerializedMapobject::set_allocated_ellipsoid(::SerializedEllipsoid* ellipsoid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ellipsoid_;
  }
  if (ellipsoid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ellipsoid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ellipsoid, submessage_arena);
    }
    
  } else {
    
  }
  ellipsoid_ = ellipsoid;
  // @@protoc_insertion_point(field_set_allocated:SerializedMapobject.ellipsoid)
}

// uint32 object_track_id = 2;
inline void SerializedMapobject::clear_object_track_id() {
  object_track_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedMapobject::object_track_id() const {
  // @@protoc_insertion_point(field_get:SerializedMapobject.object_track_id)
  return object_track_id_;
}
inline void SerializedMapobject::set_object_track_id(::google::protobuf::uint32 value) {
  
  object_track_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedMapobject.object_track_id)
}

// -------------------------------------------------------------------

// SerializedMapobjectArray

// repeated .SerializedMapobject mapobject = 1;
inline int SerializedMapobjectArray::mapobject_size() const {
  return mapobject_.size();
}
inline void SerializedMapobjectArray::clear_mapobject() {
  mapobject_.Clear();
}
inline ::SerializedMapobject* SerializedMapobjectArray::mutable_mapobject(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedMapobjectArray.mapobject)
  return mapobject_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedMapobject >*
SerializedMapobjectArray::mutable_mapobject() {
  // @@protoc_insertion_point(field_mutable_list:SerializedMapobjectArray.mapobject)
  return &mapobject_;
}
inline const ::SerializedMapobject& SerializedMapobjectArray::mapobject(int index) const {
  // @@protoc_insertion_point(field_get:SerializedMapobjectArray.mapobject)
  return mapobject_.Get(index);
}
inline ::SerializedMapobject* SerializedMapobjectArray::add_mapobject() {
  // @@protoc_insertion_point(field_add:SerializedMapobjectArray.mapobject)
  return mapobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedMapobject >&
SerializedMapobjectArray::mapobject() const {
  // @@protoc_insertion_point(field_list:SerializedMapobjectArray.mapobject)
  return mapobject_;
}

// -------------------------------------------------------------------

// SerializedBBox2

// float xmin = 1;
inline void SerializedBBox2::clear_xmin() {
  xmin_ = 0;
}
inline float SerializedBBox2::xmin() const {
  // @@protoc_insertion_point(field_get:SerializedBBox2.xmin)
  return xmin_;
}
inline void SerializedBBox2::set_xmin(float value) {
  
  xmin_ = value;
  // @@protoc_insertion_point(field_set:SerializedBBox2.xmin)
}

// float ymin = 2;
inline void SerializedBBox2::clear_ymin() {
  ymin_ = 0;
}
inline float SerializedBBox2::ymin() const {
  // @@protoc_insertion_point(field_get:SerializedBBox2.ymin)
  return ymin_;
}
inline void SerializedBBox2::set_ymin(float value) {
  
  ymin_ = value;
  // @@protoc_insertion_point(field_set:SerializedBBox2.ymin)
}

// float xmax = 3;
inline void SerializedBBox2::clear_xmax() {
  xmax_ = 0;
}
inline float SerializedBBox2::xmax() const {
  // @@protoc_insertion_point(field_get:SerializedBBox2.xmax)
  return xmax_;
}
inline void SerializedBBox2::set_xmax(float value) {
  
  xmax_ = value;
  // @@protoc_insertion_point(field_set:SerializedBBox2.xmax)
}

// float ymax = 4;
inline void SerializedBBox2::clear_ymax() {
  ymax_ = 0;
}
inline float SerializedBBox2::ymax() const {
  // @@protoc_insertion_point(field_get:SerializedBBox2.ymax)
  return ymax_;
}
inline void SerializedBBox2::set_ymax(float value) {
  
  ymax_ = value;
  // @@protoc_insertion_point(field_set:SerializedBBox2.ymax)
}

// -------------------------------------------------------------------

// SerializedObjectTrack

// uint32 id = 1;
inline void SerializedObjectTrack::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::id() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.id)
  return id_;
}
inline void SerializedObjectTrack::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.id)
}

// uint32 cat = 2;
inline void SerializedObjectTrack::clear_cat() {
  cat_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::cat() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.cat)
  return cat_;
}
inline void SerializedObjectTrack::set_cat(::google::protobuf::uint32 value) {
  
  cat_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.cat)
}

// uint32 last_frame_id = 3;
inline void SerializedObjectTrack::clear_last_frame_id() {
  last_frame_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::last_frame_id() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.last_frame_id)
  return last_frame_id_;
}
inline void SerializedObjectTrack::set_last_frame_id(::google::protobuf::uint32 value) {
  
  last_frame_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.last_frame_id)
}

// uint32 color_r = 4;
inline void SerializedObjectTrack::clear_color_r() {
  color_r_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::color_r() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.color_r)
  return color_r_;
}
inline void SerializedObjectTrack::set_color_r(::google::protobuf::uint32 value) {
  
  color_r_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.color_r)
}

// uint32 color_g = 5;
inline void SerializedObjectTrack::clear_color_g() {
  color_g_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::color_g() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.color_g)
  return color_g_;
}
inline void SerializedObjectTrack::set_color_g(::google::protobuf::uint32 value) {
  
  color_g_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.color_g)
}

// uint32 color_b = 6;
inline void SerializedObjectTrack::clear_color_b() {
  color_b_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::color_b() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.color_b)
  return color_b_;
}
inline void SerializedObjectTrack::set_color_b(::google::protobuf::uint32 value) {
  
  color_b_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.color_b)
}

// uint32 status = 7;
inline void SerializedObjectTrack::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 SerializedObjectTrack::status() const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.status)
  return status_;
}
inline void SerializedObjectTrack::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.status)
}

// repeated .SerializedBBox2 kf_bboxes = 8;
inline int SerializedObjectTrack::kf_bboxes_size() const {
  return kf_bboxes_.size();
}
inline void SerializedObjectTrack::clear_kf_bboxes() {
  kf_bboxes_.Clear();
}
inline ::SerializedBBox2* SerializedObjectTrack::mutable_kf_bboxes(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedObjectTrack.kf_bboxes)
  return kf_bboxes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedBBox2 >*
SerializedObjectTrack::mutable_kf_bboxes() {
  // @@protoc_insertion_point(field_mutable_list:SerializedObjectTrack.kf_bboxes)
  return &kf_bboxes_;
}
inline const ::SerializedBBox2& SerializedObjectTrack::kf_bboxes(int index) const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.kf_bboxes)
  return kf_bboxes_.Get(index);
}
inline ::SerializedBBox2* SerializedObjectTrack::add_kf_bboxes() {
  // @@protoc_insertion_point(field_add:SerializedObjectTrack.kf_bboxes)
  return kf_bboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedBBox2 >&
SerializedObjectTrack::kf_bboxes() const {
  // @@protoc_insertion_point(field_list:SerializedObjectTrack.kf_bboxes)
  return kf_bboxes_;
}

// repeated uint32 kf_indices = 9;
inline int SerializedObjectTrack::kf_indices_size() const {
  return kf_indices_.size();
}
inline void SerializedObjectTrack::clear_kf_indices() {
  kf_indices_.Clear();
}
inline ::google::protobuf::uint32 SerializedObjectTrack::kf_indices(int index) const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.kf_indices)
  return kf_indices_.Get(index);
}
inline void SerializedObjectTrack::set_kf_indices(int index, ::google::protobuf::uint32 value) {
  kf_indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.kf_indices)
}
inline void SerializedObjectTrack::add_kf_indices(::google::protobuf::uint32 value) {
  kf_indices_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedObjectTrack.kf_indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SerializedObjectTrack::kf_indices() const {
  // @@protoc_insertion_point(field_list:SerializedObjectTrack.kf_indices)
  return kf_indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SerializedObjectTrack::mutable_kf_indices() {
  // @@protoc_insertion_point(field_mutable_list:SerializedObjectTrack.kf_indices)
  return &kf_indices_;
}

// repeated double kf_scores = 10;
inline int SerializedObjectTrack::kf_scores_size() const {
  return kf_scores_.size();
}
inline void SerializedObjectTrack::clear_kf_scores() {
  kf_scores_.Clear();
}
inline double SerializedObjectTrack::kf_scores(int index) const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrack.kf_scores)
  return kf_scores_.Get(index);
}
inline void SerializedObjectTrack::set_kf_scores(int index, double value) {
  kf_scores_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedObjectTrack.kf_scores)
}
inline void SerializedObjectTrack::add_kf_scores(double value) {
  kf_scores_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedObjectTrack.kf_scores)
}
inline const ::google::protobuf::RepeatedField< double >&
SerializedObjectTrack::kf_scores() const {
  // @@protoc_insertion_point(field_list:SerializedObjectTrack.kf_scores)
  return kf_scores_;
}
inline ::google::protobuf::RepeatedField< double >*
SerializedObjectTrack::mutable_kf_scores() {
  // @@protoc_insertion_point(field_mutable_list:SerializedObjectTrack.kf_scores)
  return &kf_scores_;
}

// -------------------------------------------------------------------

// SerializedObjectTrackArray

// repeated .SerializedObjectTrack objecttrack = 1;
inline int SerializedObjectTrackArray::objecttrack_size() const {
  return objecttrack_.size();
}
inline void SerializedObjectTrackArray::clear_objecttrack() {
  objecttrack_.Clear();
}
inline ::SerializedObjectTrack* SerializedObjectTrackArray::mutable_objecttrack(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedObjectTrackArray.objecttrack)
  return objecttrack_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedObjectTrack >*
SerializedObjectTrackArray::mutable_objecttrack() {
  // @@protoc_insertion_point(field_mutable_list:SerializedObjectTrackArray.objecttrack)
  return &objecttrack_;
}
inline const ::SerializedObjectTrack& SerializedObjectTrackArray::objecttrack(int index) const {
  // @@protoc_insertion_point(field_get:SerializedObjectTrackArray.objecttrack)
  return objecttrack_.Get(index);
}
inline ::SerializedObjectTrack* SerializedObjectTrackArray::add_objecttrack() {
  // @@protoc_insertion_point(field_add:SerializedObjectTrackArray.objecttrack)
  return objecttrack_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedObjectTrack >&
SerializedObjectTrackArray::objecttrack() const {
  // @@protoc_insertion_point(field_list:SerializedObjectTrackArray.objecttrack)
  return objecttrack_;
}

// -------------------------------------------------------------------

// SerializedKeyframe

// uint32 id = 1;
inline void SerializedKeyframe::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframe::id() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.id)
  return id_;
}
inline void SerializedKeyframe::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.id)
}

// .SerializedPose pose = 2;
inline bool SerializedKeyframe::has_pose() const {
  return this != internal_default_instance() && pose_ != NULL;
}
inline void SerializedKeyframe::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
inline const ::SerializedPose& SerializedKeyframe::_internal_pose() const {
  return *pose_;
}
inline const ::SerializedPose& SerializedKeyframe::pose() const {
  const ::SerializedPose* p = pose_;
  // @@protoc_insertion_point(field_get:SerializedKeyframe.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedPose*>(
      &::_SerializedPose_default_instance_);
}
inline ::SerializedPose* SerializedKeyframe::release_pose() {
  // @@protoc_insertion_point(field_release:SerializedKeyframe.pose)
  
  ::SerializedPose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline ::SerializedPose* SerializedKeyframe::mutable_pose() {
  
  if (pose_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedPose>(GetArenaNoVirtual());
    pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedKeyframe.pose)
  return pose_;
}
inline void SerializedKeyframe::set_allocated_pose(::SerializedPose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_;
  }
  if (pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:SerializedKeyframe.pose)
}

// .SerializedK kmatrix = 3;
inline bool SerializedKeyframe::has_kmatrix() const {
  return this != internal_default_instance() && kmatrix_ != NULL;
}
inline void SerializedKeyframe::clear_kmatrix() {
  if (GetArenaNoVirtual() == NULL && kmatrix_ != NULL) {
    delete kmatrix_;
  }
  kmatrix_ = NULL;
}
inline const ::SerializedK& SerializedKeyframe::_internal_kmatrix() const {
  return *kmatrix_;
}
inline const ::SerializedK& SerializedKeyframe::kmatrix() const {
  const ::SerializedK* p = kmatrix_;
  // @@protoc_insertion_point(field_get:SerializedKeyframe.kmatrix)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedK*>(
      &::_SerializedK_default_instance_);
}
inline ::SerializedK* SerializedKeyframe::release_kmatrix() {
  // @@protoc_insertion_point(field_release:SerializedKeyframe.kmatrix)
  
  ::SerializedK* temp = kmatrix_;
  kmatrix_ = NULL;
  return temp;
}
inline ::SerializedK* SerializedKeyframe::mutable_kmatrix() {
  
  if (kmatrix_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedK>(GetArenaNoVirtual());
    kmatrix_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedKeyframe.kmatrix)
  return kmatrix_;
}
inline void SerializedKeyframe::set_allocated_kmatrix(::SerializedK* kmatrix) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete kmatrix_;
  }
  if (kmatrix) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kmatrix = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kmatrix, submessage_arena);
    }
    
  } else {
    
  }
  kmatrix_ = kmatrix;
  // @@protoc_insertion_point(field_set_allocated:SerializedKeyframe.kmatrix)
}

// uint32 kindex = 4;
inline void SerializedKeyframe::clear_kindex() {
  kindex_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframe::kindex() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.kindex)
  return kindex_;
}
inline void SerializedKeyframe::set_kindex(::google::protobuf::uint32 value) {
  
  kindex_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.kindex)
}

// repeated uint32 loopedgesids = 5;
inline int SerializedKeyframe::loopedgesids_size() const {
  return loopedgesids_.size();
}
inline void SerializedKeyframe::clear_loopedgesids() {
  loopedgesids_.Clear();
}
inline ::google::protobuf::uint32 SerializedKeyframe::loopedgesids(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.loopedgesids)
  return loopedgesids_.Get(index);
}
inline void SerializedKeyframe::set_loopedgesids(int index, ::google::protobuf::uint32 value) {
  loopedgesids_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedKeyframe.loopedgesids)
}
inline void SerializedKeyframe::add_loopedgesids(::google::protobuf::uint32 value) {
  loopedgesids_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedKeyframe.loopedgesids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SerializedKeyframe::loopedgesids() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframe.loopedgesids)
  return loopedgesids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SerializedKeyframe::mutable_loopedgesids() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframe.loopedgesids)
  return &loopedgesids_;
}

// double timestamp = 6;
inline void SerializedKeyframe::clear_timestamp() {
  timestamp_ = 0;
}
inline double SerializedKeyframe::timestamp() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.timestamp)
  return timestamp_;
}
inline void SerializedKeyframe::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.timestamp)
}

// -------------------------------------------------------------------

// SerializedKeyframeArray

// repeated .SerializedKeyframe keyframe = 1;
inline int SerializedKeyframeArray::keyframe_size() const {
  return keyframe_.size();
}
inline void SerializedKeyframeArray::clear_keyframe() {
  keyframe_.Clear();
}
inline ::SerializedKeyframe* SerializedKeyframeArray::mutable_keyframe(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeArray.keyframe)
  return keyframe_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >*
SerializedKeyframeArray::mutable_keyframe() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeArray.keyframe)
  return &keyframe_;
}
inline const ::SerializedKeyframe& SerializedKeyframeArray::keyframe(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeArray.keyframe)
  return keyframe_.Get(index);
}
inline ::SerializedKeyframe* SerializedKeyframeArray::add_keyframe() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeArray.keyframe)
  return keyframe_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >&
SerializedKeyframeArray::keyframe() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeArray.keyframe)
  return keyframe_;
}

// -------------------------------------------------------------------

// SerializedFeature

// uint32 mappoint_id = 2;
inline void SerializedFeature::clear_mappoint_id() {
  mappoint_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedFeature::mappoint_id() const {
  // @@protoc_insertion_point(field_get:SerializedFeature.mappoint_id)
  return mappoint_id_;
}
inline void SerializedFeature::set_mappoint_id(::google::protobuf::uint32 value) {
  
  mappoint_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedFeature.mappoint_id)
}

// .SerializedKeypoint keypoint = 3;
inline bool SerializedFeature::has_keypoint() const {
  return this != internal_default_instance() && keypoint_ != NULL;
}
inline void SerializedFeature::clear_keypoint() {
  if (GetArenaNoVirtual() == NULL && keypoint_ != NULL) {
    delete keypoint_;
  }
  keypoint_ = NULL;
}
inline const ::SerializedKeypoint& SerializedFeature::_internal_keypoint() const {
  return *keypoint_;
}
inline const ::SerializedKeypoint& SerializedFeature::keypoint() const {
  const ::SerializedKeypoint* p = keypoint_;
  // @@protoc_insertion_point(field_get:SerializedFeature.keypoint)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedKeypoint*>(
      &::_SerializedKeypoint_default_instance_);
}
inline ::SerializedKeypoint* SerializedFeature::release_keypoint() {
  // @@protoc_insertion_point(field_release:SerializedFeature.keypoint)
  
  ::SerializedKeypoint* temp = keypoint_;
  keypoint_ = NULL;
  return temp;
}
inline ::SerializedKeypoint* SerializedFeature::mutable_keypoint() {
  
  if (keypoint_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedKeypoint>(GetArenaNoVirtual());
    keypoint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedFeature.keypoint)
  return keypoint_;
}
inline void SerializedFeature::set_allocated_keypoint(::SerializedKeypoint* keypoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete keypoint_;
  }
  if (keypoint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      keypoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, keypoint, submessage_arena);
    }
    
  } else {
    
  }
  keypoint_ = keypoint;
  // @@protoc_insertion_point(field_set_allocated:SerializedFeature.keypoint)
}

// .SerializedDescriptor briefdescriptor = 4;
inline bool SerializedFeature::has_briefdescriptor() const {
  return this != internal_default_instance() && briefdescriptor_ != NULL;
}
inline void SerializedFeature::clear_briefdescriptor() {
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) {
    delete briefdescriptor_;
  }
  briefdescriptor_ = NULL;
}
inline const ::SerializedDescriptor& SerializedFeature::_internal_briefdescriptor() const {
  return *briefdescriptor_;
}
inline const ::SerializedDescriptor& SerializedFeature::briefdescriptor() const {
  const ::SerializedDescriptor* p = briefdescriptor_;
  // @@protoc_insertion_point(field_get:SerializedFeature.briefdescriptor)
  return p != NULL ? *p : *reinterpret_cast<const ::SerializedDescriptor*>(
      &::_SerializedDescriptor_default_instance_);
}
inline ::SerializedDescriptor* SerializedFeature::release_briefdescriptor() {
  // @@protoc_insertion_point(field_release:SerializedFeature.briefdescriptor)
  
  ::SerializedDescriptor* temp = briefdescriptor_;
  briefdescriptor_ = NULL;
  return temp;
}
inline ::SerializedDescriptor* SerializedFeature::mutable_briefdescriptor() {
  
  if (briefdescriptor_ == NULL) {
    auto* p = CreateMaybeMessage<::SerializedDescriptor>(GetArenaNoVirtual());
    briefdescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SerializedFeature.briefdescriptor)
  return briefdescriptor_;
}
inline void SerializedFeature::set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete briefdescriptor_;
  }
  if (briefdescriptor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      briefdescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, briefdescriptor, submessage_arena);
    }
    
  } else {
    
  }
  briefdescriptor_ = briefdescriptor;
  // @@protoc_insertion_point(field_set_allocated:SerializedFeature.briefdescriptor)
}

// -------------------------------------------------------------------

// SerializedKeyframeFeatures

// uint32 keyframe_id = 1;
inline void SerializedKeyframeFeatures::clear_keyframe_id() {
  keyframe_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframeFeatures::keyframe_id() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeatures.keyframe_id)
  return keyframe_id_;
}
inline void SerializedKeyframeFeatures::set_keyframe_id(::google::protobuf::uint32 value) {
  
  keyframe_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframeFeatures.keyframe_id)
}

// repeated .SerializedFeature feature = 2;
inline int SerializedKeyframeFeatures::feature_size() const {
  return feature_.size();
}
inline void SerializedKeyframeFeatures::clear_feature() {
  feature_.Clear();
}
inline ::SerializedFeature* SerializedKeyframeFeatures::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeFeatures.feature)
  return feature_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedFeature >*
SerializedKeyframeFeatures::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeFeatures.feature)
  return &feature_;
}
inline const ::SerializedFeature& SerializedKeyframeFeatures::feature(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeatures.feature)
  return feature_.Get(index);
}
inline ::SerializedFeature* SerializedKeyframeFeatures::add_feature() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeFeatures.feature)
  return feature_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedFeature >&
SerializedKeyframeFeatures::feature() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeFeatures.feature)
  return feature_;
}

// -------------------------------------------------------------------

// SerializedKeyframeFeaturesArray

// repeated .SerializedKeyframeFeatures feature = 1;
inline int SerializedKeyframeFeaturesArray::feature_size() const {
  return feature_.size();
}
inline void SerializedKeyframeFeaturesArray::clear_feature() {
  feature_.Clear();
}
inline ::SerializedKeyframeFeatures* SerializedKeyframeFeaturesArray::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeFeaturesArray.feature)
  return feature_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >*
SerializedKeyframeFeaturesArray::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeFeaturesArray.feature)
  return &feature_;
}
inline const ::SerializedKeyframeFeatures& SerializedKeyframeFeaturesArray::feature(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeaturesArray.feature)
  return feature_.Get(index);
}
inline ::SerializedKeyframeFeatures* SerializedKeyframeFeaturesArray::add_feature() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeFeaturesArray.feature)
  return feature_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >&
SerializedKeyframeFeaturesArray::feature() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeFeaturesArray.feature)
  return feature_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_osmap_2eproto
